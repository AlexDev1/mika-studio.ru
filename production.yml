version: '3'

volumes:
  production_postgres_data: {}
  production_postgres_data_backups: {}
  production_traefik: {}
  media: {}

services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/production/django/Dockerfile
    image: mika_prod_django
    depends_on:
      - postgres
      - redis
    volumes:
      - media:/app/mika_studio/media
    env_file:
      - ./.envs/.production/.django
      - ./.envs/.production/.postgres
    command: /start

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: mika_prod_postgres
    volumes:
      - production_postgres_data:/var/lib/postgresql/data:Z
      - production_postgres_data_backups:/backups:z
    env_file:
      - ./.envs/.production/.postgres
    logging:
      options:
        max-size: "10m"
        max-file: "3"

  traefik:
    build:
      context: .
      dockerfile: ./compose/production/traefik/Dockerfile
    image: mika_prod_traefik
    depends_on:
      - django
    volumes:
      - production_traefik:/etc/traefik/acme:z
    ports:
      - "0.0.0.0:80:80"
      - "0.0.0.0:443:443"
      - "0.0.0.0:5555:5555"

  redis:
    image: redis:5.0

  celeryworker:
    <<: *django
    image: mika_produ_celeryworker
    command: /start-celeryworker
    logging:
      options:
        max-size: "10m"
        max-file: "3"

  #celerybeat:
  #  <<: *django
  #  image: mika_prod_celerybeat
  #  command: /start-celerybeat

  #flower:
  #  <<: *django
  #  image: mika_prod_flower
  #  command: /start-flower


